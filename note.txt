import tkinter as tk
from tkinter import ttk
from config.settings import (
    WINDOW_TITLE, WINDOW_WIDTH, WINDOW_HEIGHT, BACKGROUND_COLOR,
    SORTING_ALGORITHMS, BUTTON_STYLE, ANIMATION_SPEED, DEFAULT_BAR_COUNT
)

class MainWindow:
    def __init__(self, root):
        # Configure the main window
        self.root = root
        self.root.title(WINDOW_TITLE)
        self.root.geometry(f"{WINDOW_WIDTH}x{WINDOW_HEIGHT}")
        self.root.configure(bg=BACKGROUND_COLOR)
        self.root.resizable(False, False)

        # Initialize variables
        self.selected_algorithm = tk.StringVar(value=SORTING_ALGORITHMS[0])
        self.bar_count = tk.IntVar(value=DEFAULT_BAR_COUNT)
        self.animation_speed = tk.IntVar(value=ANIMATION_SPEED)

        # Build UI components
        self.create_widgets()

    def create_widgets(self):
        # Create a frame for controls
        control_frame = tk.Frame(self.root, bg=BACKGROUND_COLOR, padx=10, pady=10)
        control_frame.pack(side=tk.TOP, fill=tk.X)

        # Dropdown for selecting sorting algorithm
        ttk.Label(control_frame, text="Algorithm:", background=BACKGROUND_COLOR).grid(row=0, column=0, padx=5, pady=5)
        algorithm_menu = ttk.Combobox(
            control_frame, textvariable=self.selected_algorithm, values=SORTING_ALGORITHMS, state="readonly", width=15
        )
        algorithm_menu.grid(row=0, column=1, padx=5, pady=5)

        # Slider for bar count
        ttk.Label(control_frame, text="Bar Count:", background=BACKGROUND_COLOR).grid(row=0, column=2, padx=5, pady=5)
        bar_count_slider = ttk.Scale(
            control_frame, from_=10, to=100, orient=tk.HORIZONTAL, variable=self.bar_count
        )
        bar_count_slider.grid(row=0, column=3, padx=5, pady=5)

        # Slider for animation speed
        ttk.Label(control_frame, text="Speed:", background=BACKGROUND_COLOR).grid(row=0, column=4, padx=5, pady=5)
        speed_slider = ttk.Scale(
            control_frame, from_=10, to=1000, orient=tk.HORIZONTAL, variable=self.animation_speed
        )
        speed_slider.grid(row=0, column=5, padx=5, pady=5)

        # Buttons for actions
        start_button = tk.Button(control_frame, text="Start", command=self.start_sorting, **BUTTON_STYLE)
        start_button.grid(row=0, column=6, padx=5, pady=5)

        pause_button = tk.Button(control_frame, text="Pause", command=self.pause_sorting, **BUTTON_STYLE)
        pause_button.grid(row=0, column=7, padx=5, pady=5)

        reset_button = tk.Button(control_frame, text="Reset", command=self.reset_sorting, **BUTTON_STYLE)
        reset_button.grid(row=0, column=8, padx=5, pady=5)

        # Create a canvas for visualization
        self.canvas = tk.Canvas(self.root, bg="white", width=WINDOW_WIDTH - 20, height=WINDOW_HEIGHT - 150)
        self.canvas.pack(pady=10)

    # Placeholder methods for button actions
    def start_sorting(self):
        print(f"Starting {self.selected_algorithm.get()} with {self.bar_count.get()} bars.")

    def pause_sorting(self):
        print("Sorting paused.")

    def reset_sorting(self):
        print("Resetting the visualization.")

# Main execution
if __name__ == "__main__":
    root = tk.Tk()
    app = MainWindow(root)
    root.mainloop()
